geom_bar(stat = "identity", position = "dodge") +
labs(x = "Area_Facilities" ,title = "Count By Facilities") + theme_bw()
# Analysis 4.3
# Q What are the most popular area of Facilities?
Facilities_Count<-data%>%group_by(Area.Locality)%>%summarise(count = length(BHK))%>%top_n(5)
head(Facilities_Count)
ggplot(Size_Count,
mapping = aes(x= Area.Locality,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Area_Facilities" ,y = "Count",title = "Count By Facilities") + theme_bw()
# Analysis 4.4
# Q What are the most popular house sizes?
Size_Count<-data%>%group_by(Size)%>%summarise(count = length(Size))%>%top_n(8)
head(Size_Count)
ggplot(Size_Count,
mapping = aes(x= Size,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count By Size") + theme_bw()
# Analysis 1.4
#Q Find average house rents and average house sizes for point of contact?
temp <- data %>%
group_by(Point.of.Contact) %>%
summarise(Avg_Size = mean(Size),
Avg_Rent = mean(Rent))
ggplot(temp, aes(x = "",
y = Avg_Rent,
fill = Point.of.Contact)) +
geom_col() +
geom_text(aes(label = round(Avg_Rent, 2)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(title = "Average Rent By Point of Contact")
ggplot(temp, aes(x = "",
y = Avg_Size,
fill = Point.of.Contact)) +
geom_col() +
geom_text(aes(label = round(Avg_Size, 2)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(title = "Average House Sizes By Point of Contact")
## Remove Outlines
outliers <- function(x) {
Q1 <- quantile(x, probs=.25)
Q3 <- quantile(x, probs=.75)
iqr = Q3-Q1
upper_limit = Q3 + (iqr*1.5)
lower_limit = Q1 - (iqr*1.5)
x > upper_limit | x < lower_limit
}
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]),]
}
df
}
data <- remove_outliers(data, c('Rent', 'Size', 'Bathroom'))
head(data)
# Analysis 1.3
#Q Find the relationship between Rent and Area type?
ggplot(data = data,
mapping = aes(x = Area.Type,
y = Rent)) +
geom_boxplot(col="orange") +
labs(title = "Distribution of Rent By Area Type")
# Analysis 1.4
#Q Find average house rents and average house sizes for point of contact?
temp <- data %>%
group_by(Point.of.Contact) %>%
summarise(Avg_Size = mean(Size),
Avg_Rent = mean(Rent))
ggplot(temp, aes(x = "",
y = Avg_Rent,
fill = Point.of.Contact)) +
geom_col() +
geom_text(aes(label = round(Avg_Rent, 2)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(title = "Average Rent By Point of Contact")
ggplot(temp, aes(x = "",
y = Avg_Size,
fill = Point.of.Contact)) +
geom_col() +
geom_text(aes(label = round(Avg_Size, 2)),
position = position_stack(vjust = 0.5)) +
coord_polar(theta = "y") +
labs(title = "Average House Sizes By Point of Contact")
# Analysis 2.3
#Q Find the relationship between house size and house rent?
ggplot(data, aes(x=Size, y=Rent)) +
geom_point()+
geom_smooth() +
labs(title = "Relationship Between Size & Rent")
# Analysis 4.2
# Q  What are the most popular area types ?
Area_Count<-data%>%group_by(Area.Type)%>%summarise(count = length(BHK))
head(Area_Count)
ggplot(Size_Count,
mapping = aes(x= Area.Type,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Area Type" ,y = "Count",title = "Count Of Houses By Area Type") + theme_bw()
# Analysis 4.2
# Q  What are the most popular area types ?
Area_Count<-data%>%group_by(Area.Type)%>%summarise(count = length(BHK))
head(Area_Count)
ggplot(Area_Count,
mapping = aes(x= Area.Type,
y= count,
fill = count)) +
geom_bar(stat = "identity") +
labs(x = "Area Type" ,y = "Count",title = "Count Of Houses By Area Type") + theme_bw()
# Analysis 4.2
# Q  What are the most popular area types ?
Bathroom_Count<-data%>%group_by(Bathroom)%>%summarise(count = length(BHK))%>%top_n(5)
head(Bathroom_Count)
ggplot(Bathroom_Count,
mapping = aes(x= Area.Type,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Bathrooms" ,y = "Count",title = "Count Of Bathrooms in 1 House") + theme_bw()
# Analysis 4.2
# Q  What are the most popular area types ?
Bathroom_Count<-data%>%group_by(Bathroom)%>%summarise(count = length(BHK))%>%top_n(5)
head(Bathroom_Count)
ggplot(Bathroom_Count,
mapping = aes(x= Bathroom,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Bathrooms" ,y = "Count",title = "Count Of Bathrooms in 1 House") + theme_bw()
max(data$City)
min(data$City)
#Q3 What is The Relationship  between Rent,City & Furnished Status?
# Analysis 3.1
# Q What is the preferred Furnished Status & What is the least Furnished Status?
Furnished_Status<-data%>%group_by(Furnishing.Status)%>%summarise(count = length(BHK))%>%top_n(5)
head(Furnished_Status)
ggplot(Furnished_Status,
mapping = aes(x= Furnishing.Status,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge", position = "dodge") +
labs(x = "Furnished Status" ,y = "Count",title = "Count By Facilities") + theme_bw()
#Q3 What is The Relationship  between Rent,City & Furnished Status?
# Analysis 3.1
# Q What is the preferred Furnished Status & What is the least Furnished Status?
Furnished_Status<-data%>%group_by(Furnishing.Status)%>%summarise(count = length(BHK))%>%top_n(5)
head(Furnished_Status)
ggplot(Furnished_Status,
mapping = aes(x= Furnishing.Status,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Furnished Status" ,y = "Count",title = "Count By Facilities") + theme_bw()
City_Count<-data%>%group_by(City)%>%summarise(count = length(BHK))%>%arrange(desc(count))
head(City_Count)
ggplot(City_Count,
mapping = aes(x= City,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "City" ,y = "Count",title = "Count By Facilities") + theme_bw()
City_Count<-data%>%group_by(City)%>%summarise(count = length(BHK))%>%arrange(desc(count))
head(City_Count)
ggplot(City_Count,
mapping = aes(x= City,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "City" ,y = "Count",title = "Houses Counted by Cities") + theme_bw()
data$Rent_per_size<-data$Rent/data$Size
data
ggplot(data = data,
mapping = aes(x = City,
y = Rent)) +
geom_boxplot(col="black") +
labs(title = "Distribution of Rent By City")
mean(data$Rent)
max(data$Rent)
data$Rent_per_size<-data$Rent/data$Size
data
# Q4 What are the most popular houses per category?
# Analysis 4.1
# Q What are the most popular amount of bathrooms?
Area_Count<-data%>%group_by(Area.Type)%>%summarise(count = length(BHK))
head(Area_Count)
ggplot(Area_Count,
mapping = aes(x= Area.Type,
y= count,
fill = count)) +
geom_bar(stat = "identity") +
labs(x = "Area Type" ,y = "Count",title = "Count Of Houses By Area Type") + theme_bw()
# Analysis 4.2
# Q  What are the most popular area types ?
Bathroom_Count<-data%>%group_by(Bathroom)%>%summarise(count = length(BHK))%>%top_n(5)
head(Bathroom_Count)
ggplot(Bathroom_Count,
mapping = aes(x= Bathroom,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Bathrooms" ,y = "Count",title = "Count Of Bathrooms in 1 House") + theme_bw()
# Analysis 4.3
# Q What are the most popular area of Facilities?
Facilities_Count<-data%>%group_by(Area.Locality)%>%summarise(count = length(BHK))%>%top_n(5)
head(Facilities_Count)
ggplot(Size_Count,
mapping = aes(x= Area.Locality,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Area_Facilities" ,y = "Count",title = "Count By Facilities") + theme_bw()
# Analysis 4.3
# Q What are the most popular area of Facilities?
Facilities_Count<-data%>%group_by(Area.Locality)%>%summarise(count = length(BHK))%>%top_n(5)
head(Facilities_Count)
ggplot(Facilities_Count,
mapping = aes(x= Area.Locality,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Area_Facilities" ,y = "Count",title = "Count By Facilities") + theme_bw()
# Analysis 4.4
# Q What are the most popular house sizes?
Size_Count<-data%>%group_by(Size)%>%summarise(count = length(Size))%>%top_n(8)
head(Size_Count)
ggplot(Size_Count,
mapping = aes(x= Size,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count By Size") + theme_bw()
# Analysis 4.4
# Q What are the most popular house sizes?
Size_Count<-data%>%group_by(Size)%>%summarise(count = length(Size))%>%top_n(8)
head(Size_Count)
ggplot(Size_Count,
mapping = aes(x= Size,
y= count,
fill = count)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count By Size") + theme_bw()
ggplot(data = data,
mapping = aes(x = City,
y = Rent)) +
geom_boxplot(col="black") +
labs(title = "Distribution of Rent By City")
# Analysis 5.4
# Q  Which city has the highest total amount of each furnishing status per city?
Total_Furnishing_Per_city<-data%>%group_by(Furnishing.Status,City)%>%summarise(count = length(City))
head(Total_Furnishing_Per_city)
ggplot(Total_Furnishing_Per_city,
mapping = aes(x= Furnishing.Status,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Amount Of Each furnishing Status Per City") + theme_bw()
# Analysis 5.3
# Q  Which city has the highest total amount of rent per city?
Total_Amount_Rent_Per_city<-data%>%group_by(Area.Type,City)%>%summarise(count = length(City))
head(Total_Amount_Rent_Per_city)
ggplot(Total_Amount_Rent_Per_city,
mapping = aes(x= Area.Type,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Amount Of Rent Per City") + theme_bw()
Amount_Areatype_Per_city<-data%>%group_by(Area.Type,City)%>%summarise(count = length(City))
head(Amount_Areatype_Per_city)
ggplot(Amount_Areatype_Per_city,
mapping = aes(x= Area.Type,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count Of Area Type Per City") + theme_bw()
# Analysis 5.3
# Q  Which city has the highest total amount of rent per city?
Total_Amount_Rent_Per_city<-data%>%group_by(City)%>%summarise(Total_Rent = sum(Rent))
head(Total_Amount_Rent_Per_city)
ggplot(Total_Amount_Rent_Per_city,
mapping = aes(x= City,
y= Total_Rent,
fill = Total_Rent)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total amount Of rent per City") + theme_bw()
# Analysis 5.1
# Q Which city has the highest total amount of BHK per city?
Total_Amount_BHK_Per_city<-data%>%group_by(City)%>%summarise(Total_BHK = sum(BHK))
head(Total_Amount_BHK_Per_city)
ggplot(Total_Amount_BHK_Per_city,
mapping = aes(x= City,
y= Total_BHK,
fill = Total_BHK)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Amount Of BHK Per City") + theme_bw()
data[which(data$City=="Bangalore" & data$Furnishing.Status=="Semi-Furnished"),]
data[which(data$City=="Bangalore" & data$Furnishing.Status=="Semi-Furnished"),]
data[which(data$City=="Bangalore" & data$Furnishing.Status=="Semi-Furnished"),]
data[which(data$City=="Chennai" & data$Furnishing.Status=="Semi-Furnished"),]
Total_Amount_BHK_Per_city<-data%>%group_by(City)%>%summarise(Total_BHK = sum(BHK))
head(Total_Amount_BHK_Per_city)
ggplot(Total_Amount_BHK_Per_city,
mapping = aes(x= City,
y= Total_BHK,
fill = Total_BHK)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Amount Of BHK Per City") + theme_bw()
Analysis 5.2
# Analysis 5.2
# Q Which city has the highest total amount of each area type per city?
Amount_Areatype_Per_city<-data%>%group_by(Area.Type,City)%>%summarise(count = length(City))
head(Amount_Areatype_Per_city)
ggplot(Amount_Areatype_Per_city,
mapping = aes(x= Area.Type,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count Of Area Type Per City") + theme_bw()
Total_Amount_BHK_Per_city<-data%>%group_by(City)%>%summarise(Total_BHK = sum(BHK))
head(Total_Amount_BHK_Per_city)
ggplot(Total_Amount_BHK_Per_city,
mapping = aes(x= City,
y= Total_BHK,
fill = Total_BHK)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total Amount Of BHK Per City") + theme_bw()
# Analysis 5.2
# Q Which city has the highest total amount of each area type per city?
Amount_Areatype_Per_city<-data%>%group_by(Area.Type,City)%>%summarise(count = length(City))
head(Amount_Areatype_Per_city)
ggplot(Amount_Areatype_Per_city,
mapping = aes(x= Area.Type,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Count Of Area Type Per City") + theme_bw()
Total_Amount_Rent_Per_city<-data%>%group_by(City)%>%summarise(Total_Rent = sum(Rent))
head(Total_Amount_Rent_Per_city)
ggplot(Total_Amount_Rent_Per_city,
mapping = aes(x= City,
y= Total_Rent,
fill = Total_Rent)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Total amount Of rent per City") + theme_bw()
# Analysis 5.4
# Q  Which city has the highest total amount of each furnishing status per city?
Total_Furnishing_Per_city<-data%>%group_by(Furnishing.Status,City)%>%summarise(count = length(City))
head(Total_Furnishing_Per_city)
ggplot(Total_Furnishing_Per_city,
mapping = aes(x= Furnishing.Status,
y= count,
fill = City)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Amount Of Each furnishing Status Per City") + theme_bw()
#Additional feature 1 Create Correlogram Matrix
Correlogram_Matrix<-cor(house_data[,c(2,3,4,11)])
#Additional feature 1 Create Correlogram Matrix
Correlogram_Matrix<-cor(data[,c(2,3,4,11)])
head(Correlogram_Matrix)
corrplot(Correlogram_Matrix,addcoef.col = TRUE)
install.packages("corrplot")
library(corrplot)
Correlogram_Matrix<-cor(data[,c(2,3,4,11)])
head(Correlogram_Matrix)
corrplot(Correlogram_Matrix,addcoef.col = TRUE)
#Additional feature 1 Create Correlogram Matrix
Correlogram_Matrix<-cor(data[,c(2,3,4,11)])
head(Correlogram_Matrix)
corrplot(Correlogram_Matrix,addCoef.col = TRUE)
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
install.packages("plotly")
library(plotly)
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("tidyr")
library(tidyr)
library(tidyverse)
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
install.packages("caTools")
library(caTools)
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main - "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main = "Scatterplot of rent vs size", xlab = "House size", ylab ="HOUSE rent")
abline(lm(Rent ~ Size), col ="blue", lwd =  2)
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main = "Scatterplot of rent vs size", xlab = "House size", ylab ="House rent")
abline(lm(Rent ~ Size), col ="blue", lwd =  2)
# Installing Packages.
install.packages("dplyr")
install.packages("ggplot2")
install.packages("corrplot")
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (dataset_data, as (x = Rent, y = Size)) + geom_violin()
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, as (x = Rent, y = Size)) + geom_violin()
# Installing Packages.
install.packages("dplyr")
install.packages("ggplot2")
install.packages("corrplot")
install.packages("plotly")
install.packages("tidyr")
install.packages("tidyverse")
install.packages("caTools")
# Loading libraries
library(dplyr)
library(ggplot2)
library(corrplot)
library(plotly)
library(tidyr)
library(tidyverse)
library(caTools)
## Loading the data set.
data <- read.csv("E:\\OneDrive - Asia Pacific University\\Degree 2\\Sem 1\\PFDA\\ASSIGHMENT\\House_Rent_Dataset.csv")
head(data)
## Checking for missing values
colSums(is.na(data))
dim(data)
## Checking for garbage values
unique(data$Area.Type)
unique(data$City)
unique(data$Furnishing.Status)
unique(data$Tenant.Preferred)
unique(data$Point.of.Contact)
summary(data)
## Remove Outlines
outliers <- function(x) {
Q1 <- quantile(x, probs=.25)
Q3 <- quantile(x, probs=.75)
iqr = Q3-Q1
upper_limit = Q3 + (iqr*1.5)
lower_limit = Q1 - (iqr*1.5)
x > upper_limit | x < lower_limit
}
remove_outliers <- function(df, cols = names(df)) {
for (col in cols) {
df <- df[!outliers(df[[col]]),]
}
df
}
data <- remove_outliers(data, c('Rent', 'Size', 'Bathroom'))
head(data)
#Additional feature 2 create a scatter plot graph with ab line for rent by size
attach(data)
plot (Size, Rent, main = "Scatterplot of rent vs size", xlab = "House size", ylab ="House rent")
abline(lm(Rent ~ Size), col ="blue", lwd =  2)
#Additional feature 1 Create Correlogram Matrix
Correlogram_Matrix<-cor(data[,c(2,3,4,11)])
head(Correlogram_Matrix)
corrplot(Correlogram_Matrix,addCoef.col = TRUE)
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, as (x = Rent, y = Size)) + geom_violin()
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size + coord_flip()
ggplot (dataset_data, aes (x = Rent, y = Size)) + geom_violin(trim-FALSE)
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size
ggplot (dataset_data, aes (x = Rent, y = Size)) + geom_violin(trim-FALSE)
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size
ggplot (dataset_data, aes (x = Rent, y = Size))
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size
ggplot (data, aes (x = Rent, y = Size)) + geom_violin(trim-FALSE)
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size
ggplot (data, aes (x = Rent, y = Size))
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
rent_size
ggplot (data, aes (x = Rent, y = Size)) + geom_violin(trim = FALSE)
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
head(rent_size)
ggplot (data, aes (x = Rent, y = Size)) + geom_violin(trim = FALSE)
rentsize <- ggplot (data, aes (x=Rent, y=Size) ) + geom_violin()
rentsize + coord_flip()
ggplot (data, aes (x-Rent, y=size)) + geom_violin(trim=FALSE)
rentsize <- ggplot (data, aes (x=Rent, y=Size) ) + geom_violin()
rentsize + coord_flip()
ggplot (data, aes (x = Rent, y=size)) + geom_violin(trim=FALSE)
rentsize <- ggplot (data, aes (x=Rent, y=Size) ) + geom_violin()
rentsize + coord_flip()
ggplot (data, aes (x = Rent, y=Size)) + geom_violin(trim=FALSE)
#Additional feature 3 create a violin graph for rent by size
rent_size <- ggplot (data, aes (x = Rent, y = Size)) + geom_violin()
head(rent_size)
ggplot (data, aes (x = Rent, y = Size)) + geom_violin(trim = FALSE)
